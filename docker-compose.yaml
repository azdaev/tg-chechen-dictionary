version: "3"

services:
  postgres:
    container_name: chetoru_postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_DB: ${PG_DB_NAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      PGDATA: /data/postgres
      TZ: Europe/Moscow
    env_file:
      - .env
    volumes:
      - postgres:/data/postgres
    ports:
      - "5433:5432"
    networks:
      - internal-network
    restart: unless-stopped

  golang:
    container_name: chetoru_golang_container
    environment:
      TZ: Europe/Moscow
      PG_HOST: ${PG_HOST} # for prod
      PG_USER: ${PG_USER}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_DB_NAME: ${PG_DB_NAME}
      PG_PORT: ${PG_PORT}
      REDIS_ADDR: ${REDIS_ADDR}
      TG_BOT_TOKEN: ${TG_BOT_TOKEN}
      TG_ADMIN_ID: ${TG_ADMIN_ID}
    env_file:
      - .env # for local
    depends_on:
      - postgres
    build: .
    ports:
      - "8081:8081"
    networks:
      - internal-network
    restart: unless-stopped

  redis:
    container_name: chetoru_redis_container
    image: redis:alpine
    command: redis-server --save 60 1 --loglevel warning --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    networks:
      - internal-network
    restart: unless-stopped

networks:
  internal-network:
    driver: bridge

volumes:
  postgres:
  redis_data: